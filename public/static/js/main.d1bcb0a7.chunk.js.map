{"version":3,"sources":["redux/types/authTypes.js","redux/reducers/authReducer.js","redux/types/calendarTypes.js","redux/reducers/calendarReducer.js","redux/types/uiTypes.js","redux/reducers/uiReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvent.js","redux/actions/calendarActions.js","redux/actions/authActions.js","components/auth/LoginRegisterScreen.js","components/ui/Navbar.js","helpers/calendar-messages-ES.js","components/calendar/CalendarEvent.js","redux/actions/uiActions.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoutes.js","routers/PublicRoutes.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["authTypes","initialState","checking","calendarTypes","events","activeEvent","uiTypes","modalOpen","rootReducer","combineReducers","ui","state","action","type","openModal","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","setNewValues","handleInputChange","target","name","value","formValues","baseUrl","process","fetchWithoutToken","endpoint","data","a","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvent","end","parseISO","start","calendarAddNewAction","calendarClearActiveAction","calendarUpdateAction","calendarDeleteAction","loadAction","loginAction","user","checkingFinishAction","startLogoutAction","dispatch","clear","logoutAction","LoginRegisterScreen","dispath","useDispatch","lEmail","lPassword","rName","rEmail","rPassword","rPassword2","valuesForm","handleChangeForm","className","onSubmit","e","email","password","preventDefault","resp","json","success","setItem","Date","getTime","uid","Swal","fire","error","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiSetOpenModalAction","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","addHours","setMinutes","setSeconds","CalendarModal","notes","setted","useRef","useEffect","current","closeModal","isOpen","onRequestClose","style","contentLabel","overlayClassName","closeTimeoutMS","isEqual","isBefore","trim","getState","eventBack","_id","startAddNewAction","minDate","autoComplete","rows","resize","AddNewFab","DeleteEventFab","locales","es","localizer","dateFnsLocalizer","format","parse","startOfWeek","getDay","CalendarScreen","lastView","setLastView","culture","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","view","selectable","onSelectSlot","PrivateRoutes","isAuthenticated","children","rest","to","PublicRoutes","AppRouter","path","exact","CalendarApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1bcb0a7.chunk.js","sourcesContent":["export const authTypes = {\n  CHECKING_FINISH: '[AUTH] FINISH CHECKING LOGIN STATE',\n  LOGIN: '[AUTH] LOGIN',\n  LOGOUT: '[AUTH] LOGOUT',\n};\n","import { authTypes } from '../types/authTypes';\n\nconst initialState = {\n  checking: true,\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case authTypes.LOGIN:\n      return { ...state, ...action.payload, checking: false };\n\n    case authTypes.CHECKING_FINISH:\n      return { ...state, checking: false };\n\n    case authTypes.LOGOUT:\n      return { checking: false };\n    default:\n      return state;\n  }\n};\n","export const calendarTypes = {\n  ADD_NEW: '[CALENDAR] ADD NEW',\n  SET_ACTIVE: '[CALENDAR] SET ACTIVE',\n  CLEAR_ACTIVE: '[CALENDAR] CLEAR ACTIVE',\n  UPDATE: '[CALENDAR] UPDATE',\n  DELETE: '[CALENDAR] DELETE',\n  LOAD: '[CALENDAR] LOAD',\n  CLEAR_LOGOUT: '[CALENDAR] CLEAR LOGOUT',\n};\n","import { calendarTypes } from '../types/calendarTypes';\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case calendarTypes.ADD_NEW:\n      return { ...state, events: [...state.events, action.payload] };\n    case calendarTypes.SET_ACTIVE:\n      return { ...state, activeEvent: action.payload };\n    case calendarTypes.CLEAR_ACTIVE:\n      return { ...state, activeEvent: null };\n    case calendarTypes.UPDATE:\n      return {\n        ...state,\n        events: state.events.map((event) =>\n          event.id === action.payload.id ? action.payload : event\n        ),\n      };\n    case calendarTypes.DELETE:\n      return {\n        ...state,\n        events: state.events.filter(\n          (event) => event.id !== state.activeEvent.id\n        ),\n        activeEvent: null,\n      };\n\n    case calendarTypes.LOAD:\n      return { ...state, events: [...action.payload] };\n\n    case calendarTypes.CLEAR_LOGOUT:\n      return { ...initialState };\n\n    default:\n      return state;\n  }\n};\n","export const uiTypes = {\n  OPEN_MODAL: '[UI] OPEN MODAL',\n  CLOSE_MODAL: '[UI] CLOSE MODAL',\n};\n","import { uiTypes } from '../types/uiTypes';\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case uiTypes.OPEN_MODAL:\n      return { ...state, openModal: true };\n    case uiTypes.CLOSE_MODAL:\n      return { ...state, openModal: false };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { useState } from 'react';\n\nconst useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const setNewValues = (values) => {\n    setValues(values);\n  };\n\n  const handleInputChange = ({ target }) => {\n    const { name, value } = target;\n\n    setValues((formValues) => ({\n      ...formValues,\n      [name]: value,\n    }));\n  };\n\n  return { values, handleInputChange, reset, setNewValues };\n};\n\nexport default useForm;\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchWithoutToken = async (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`;\n\n  if (method === 'GET') {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nexport const fetchWithToken = async (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`;\n  const token = localStorage.getItem('token') || '';\n\n  if (method === 'GET') {\n    return fetch(url, {\n      method,\n      headers: {\n        'x-token': token,\n      },\n    });\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-Type': 'application/json',\n        'x-token': token,\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n","import { parseISO } from 'date-fns';\n\nexport const prepareEvent = (events) => {\n  return events.map((event) => ({\n    ...event,\n    end: parseISO(event.end),\n    start: parseISO(event.start),\n  }));\n};\n","import Swal from 'sweetalert2';\nimport { fetchWithToken } from '../../helpers/fetch';\nimport { prepareEvent } from '../../helpers/prepareEvent';\nimport { calendarTypes } from '../types/calendarTypes';\n\nexport const startAddNewAction = ({ notes, title, start, end }) => async (\n  dispatch,\n  getState\n) => {\n  const eventBack = {\n    notes,\n    title,\n    start: new Date(start).getTime(),\n    end: new Date(end).getTime(),\n  };\n\n  const { uid, name } = getState().auth;\n\n  try {\n    const resp = await fetchWithToken('events', eventBack, 'POST');\n    const body = await resp.json();\n\n    if (body.success) {\n      const event = {\n        notes,\n        title,\n        end,\n        start,\n        id: body.event.id,\n        user: {\n          _id: uid,\n          name,\n        },\n      };\n\n      dispatch(calendarAddNewAction(event));\n    }\n  } catch (error) {\n    Swal.fire('Error', error, 'error');\n  }\n};\n\nconst calendarAddNewAction = (event) => ({\n  type: calendarTypes.ADD_NEW,\n  payload: event,\n});\n\nexport const calendarSetActiveAction = (event) => ({\n  type: calendarTypes.SET_ACTIVE,\n  payload: event,\n});\n\nexport const calendarClearActiveAction = () => ({\n  type: calendarTypes.CLEAR_ACTIVE,\n});\n\nexport const startUpdateAction = (event) => async (dispatch) => {\n  try {\n    const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\n    const body = await resp.json();\n\n    if (body.success) {\n      dispatch(calendarUpdateAction(event));\n    } else {\n      Swal.fire('Error', body.error, 'error');\n    }\n  } catch (error) {\n    Swal.fire('Error', error, 'error');\n  }\n};\n\nconst calendarUpdateAction = (event) => ({\n  type: calendarTypes.UPDATE,\n  payload: event,\n});\n\nexport const startDeleteAction = () => async (dispatch, getState) => {\n  const { id } = getState().calendar.activeEvent;\n\n  try {\n    const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\n    const body = await resp.json();\n\n    if (body.success) {\n      dispatch(calendarDeleteAction());\n    } else {\n      Swal.fire('Error', body.error, 'error');\n    }\n  } catch (error) {\n    Swal.fire('Error', error, 'error');\n  }\n};\n\nconst calendarDeleteAction = () => ({\n  type: calendarTypes.DELETE,\n});\n\nexport const startLoadAction = () => async (dispatch) => {\n  try {\n    const resp = await fetchWithToken('events');\n    const body = await resp.json();\n    const events = prepareEvent(body.events);\n\n    if (body.success) {\n      dispatch(loadAction(events));\n    }\n  } catch (error) {\n    Swal.fire('Error', error, 'error');\n  }\n};\n\nconst loadAction = (events) => ({ type: calendarTypes.LOAD, payload: events });\n\nexport const clearLogoutAction = () => ({ type: calendarTypes.CLEAR_LOGOUT });\n","import Swal from 'sweetalert2';\nimport { fetchWithoutToken, fetchWithToken } from '../../helpers/fetch';\nimport { authTypes } from '../types/authTypes';\nimport { clearLogoutAction } from './calendarActions';\n\nexport const startLoginAction = (email, password) => async (dispatch) => {\n  const resp = await fetchWithoutToken('auth', { email, password }, 'POST');\n  const body = await resp.json();\n\n  if (body.success) {\n    localStorage.setItem('token', body.token);\n    localStorage.setItem('token-init-date', new Date().getTime());\n    dispatch(loginAction({ uid: body.uid, name: body.name }));\n  } else {\n    Swal.fire('Error', body.error, 'error');\n  }\n};\n\nexport const startRegisterAction = (user) => async (dispatch) => {\n  const resp = await fetchWithoutToken('auth/new', user, 'POST');\n  const body = await resp.json();\n\n  if (body.success) {\n    localStorage.setItem('token', body.token);\n    localStorage.setItem('token-init-date', new Date().getTime());\n    dispatch(loginAction({ uid: body.uid, name: body.name }));\n  } else {\n    Swal.fire('Error', body.error, 'error');\n  }\n};\n\nexport const startChecking = () => async (dispatch) => {\n  const resp = await fetchWithToken('auth/renew');\n  const body = await resp.json();\n\n  if (body.success) {\n    localStorage.setItem('token', body.token);\n    localStorage.setItem('token-init-date', new Date().getTime());\n    dispatch(loginAction({ uid: body.uid, name: body.name }));\n  } else {\n    dispatch(checkingFinishAction());\n  }\n};\n\nconst loginAction = (user) => ({ type: authTypes.LOGIN, payload: user });\n\nconst checkingFinishAction = () => ({ type: authTypes.CHECKING_FINISH });\n\nexport const startLogoutAction = () => (dispatch) => {\n  localStorage.clear();\n  dispatch(logoutAction());\n  dispatch(clearLogoutAction());\n};\n\nconst logoutAction = () => ({ type: authTypes.LOGOUT });\n","import { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport useForm from '../../hooks/useForm';\nimport {\n  startLoginAction,\n  startRegisterAction,\n} from '../../redux/actions/authActions';\nimport './login.css';\nconst LoginRegisterScreen = () => {\n  const dispath = useDispatch();\n\n  const { values, handleInputChange } = useForm({\n    lEmail: 'andres@gmail.com',\n    lPassword: '123456',\n  });\n  const { values: valuesForm, handleInputChange: handleChangeForm } = useForm({\n    rName: '',\n    rEmail: '',\n    rPassword: '',\n    rPassword2: '',\n  });\n\n  const { lEmail, lPassword } = values;\n  const { rName, rEmail, rPassword, rPassword2 } = valuesForm;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    if (!lEmail || !lPassword) {\n      Swal.fire(\n        'Rellene los datos',\n        'Debe introducir un email válido y su correspondiente contraseña',\n        'error'\n      );\n    } else {\n      dispath(startLoginAction(lEmail, lPassword));\n    }\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    if (!rName || !rEmail || !rPassword || !rPassword2) {\n      return Swal.fire('Error', 'Debes rellenar todos los campos', 'error');\n    } else if (rPassword !== rPassword2) {\n      return Swal.fire('Error', 'Las contraseñas deben coincidir.', 'error');\n    } else {\n      dispath(\n        startRegisterAction({ name: rName, email: rEmail, password: rPassword })\n      );\n    }\n  };\n\n  return (\n    <div className='container login-container'>\n      <div className='row'>\n        <div className='col-md-6 login-form-1'>\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLogin}>\n            <div className='form-group'>\n              <input\n                type='text'\n                className='form-control'\n                placeholder='Correo'\n                name='lEmail'\n                value={lEmail}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='password'\n                className='form-control'\n                placeholder='Contraseña'\n                name='lPassword'\n                value={lPassword}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className='form-group'>\n              <input type='submit' className='btnSubmit' value='Login' />\n            </div>\n          </form>\n        </div>\n\n        <div className='col-md-6 login-form-2'>\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className='form-group'>\n              <input\n                type='text'\n                className='form-control'\n                placeholder='Nombre'\n                name='rName'\n                onChange={handleChangeForm}\n                value={rName}\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='email'\n                className='form-control'\n                placeholder='Correo'\n                name='rEmail'\n                onChange={handleChangeForm}\n                value={rEmail}\n              />\n            </div>\n            <div className='form-group'>\n              <input\n                type='password'\n                className='form-control'\n                placeholder='Contraseña'\n                name='rPassword'\n                value={rPassword}\n                onChange={handleChangeForm}\n              />\n            </div>\n\n            <div className='form-group'>\n              <input\n                type='password'\n                className='form-control'\n                placeholder='Repita la contraseña'\n                name='rPassword2'\n                value={rPassword2}\n                onChange={handleChangeForm}\n              />\n            </div>\n\n            <div className='form-group'>\n              <input type='submit' className='btnSubmit' value='Crear cuenta' />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginRegisterScreen;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { startLogoutAction } from '../../redux/actions/authActions';\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector((state) => state.auth);\n  const handleLogout = () => {\n    dispatch(startLogoutAction());\n  };\n  return (\n    <div className='navbar navbar-dark bg-dark mb-4'>\n      <span className='navbar-brand'>{name}</span>\n      <button onClick={handleLogout} className='btn btn-outline-danger'>\n        <i className='fas fa-sign-out-alt'></i>\n        <span> Salir</span>\n      </button>\n    </div>\n  );\n};\n\nexport default Navbar;\n","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: (total) => `+ Ver más (${total})`,\n};\n","const CalendarEvent = ({ event }) => {\n  const { title, user } = event;\n\n  return (\n    <div>\n      <span>{title}</span>\n      <br />\n      <small>- {user.name}</small>\n    </div>\n  );\n};\n\nexport default CalendarEvent;\n","import { uiTypes } from '../types/uiTypes';\n\nexport const uiSetOpenModalAction = () => ({ type: uiTypes.OPEN_MODAL });\n\nexport const uiSetCloseModalAction = () => ({ type: uiTypes.CLOSE_MODAL });\n","import Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport { addHours, isBefore, isEqual, setMinutes, setSeconds } from 'date-fns';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { uiSetCloseModalAction } from '../../redux/actions/uiActions';\nimport {\n  startAddNewAction,\n  calendarClearActiveAction,\n  startUpdateAction,\n} from '../../redux/actions/calendarActions';\nimport useForm from '../../hooks/useForm';\nimport './modal.css';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst now = addHours(setMinutes(setSeconds(new Date(), 0), 0), 1);\n\nconst CalendarModal = () => {\n  const { openModal } = useSelector((state) => state.ui);\n  const { activeEvent } = useSelector((state) => state.calendar);\n  const dispatch = useDispatch();\n\n  const { values, handleInputChange, reset, setNewValues } = useForm({\n    title: '',\n    notes: '',\n    start: now,\n    end: addHours(now, 1),\n  });\n\n  const setted = useRef(false);\n\n  const { notes, title, start, end } = values;\n\n  useEffect(() => {\n    if (activeEvent && !setted.current) {\n      setted.current = true;\n      setNewValues(activeEvent);\n    }\n\n    if (!activeEvent && setted.current) {\n      setted.current = false;\n      reset();\n    }\n  }, [activeEvent, setNewValues, reset]);\n\n  const closeModal = () => {\n    if (setted.current) {\n      setted.current = false;\n    }\n    activeEvent && dispatch(calendarClearActiveAction());\n    reset();\n    dispatch(uiSetCloseModalAction());\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    if (isEqual(start, end) || isBefore(end, start)) {\n      Swal.fire(\n        'Aviso',\n        'La fecha fin debe ser mayor a la fecha de inicio.',\n        'warning'\n      );\n    } else if (!title.trim()) {\n      Swal.fire('Aviso', 'El evento debe tener un título', 'warning');\n    } else {\n      if (activeEvent) {\n        dispatch(startUpdateAction(values));\n      } else {\n        dispatch(startAddNewAction(values));\n      }\n      closeModal();\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={openModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel='no se loco'\n      className='modal'\n      overlayClassName='modal-fondo'\n      closeTimeoutMS={200}\n    >\n      <h1>{activeEvent ? 'Editar evento' : 'Nuevo evento'}</h1>\n      <hr />\n      <form onSubmit={handleSubmitForm} className='container'>\n        <div className='form-group'>\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            className='form-control'\n            value={start}\n            onChange={(e) =>\n              handleInputChange({ target: { name: 'start', value: e } })\n            }\n          />\n        </div>\n\n        <div className='form-group'>\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            className='form-control'\n            minDate={start}\n            value={end}\n            onChange={(e) =>\n              handleInputChange({ target: { name: 'end', value: e } })\n            }\n          />\n        </div>\n\n        <hr />\n        <div className='form-group'>\n          <label>Titulo y notas</label>\n          <input\n            type='text'\n            className='form-control'\n            placeholder='Título del evento'\n            name='title'\n            autoComplete='off'\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id='emailHelp' className='form-text text-muted'>\n            Una descripción corta\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <textarea\n            type='text'\n            className='form-control'\n            placeholder='Notas'\n            rows='5'\n            name='notes'\n            value={notes}\n            onChange={handleInputChange}\n            style={{ resize: 'none' }}\n          ></textarea>\n          <small id='emailHelp' className='form-text text-muted'>\n            Información adicional\n          </small>\n        </div>\n\n        <button type='submit' className='btn btn-outline-primary btn-block'>\n          <i className='far fa-save'></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CalendarModal;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { calendarClearActiveAction } from '../../redux/actions/calendarActions';\nimport { uiSetOpenModalAction } from '../../redux/actions/uiActions';\n\nconst AddNewFab = () => {\n  const dispatch = useDispatch();\n  const { activeEvent } = useSelector((state) => state.calendar);\n  const handleAdd = () => {\n    activeEvent && dispatch(calendarClearActiveAction());\n\n    dispatch(uiSetOpenModalAction());\n  };\n  return (\n    <button onClick={handleAdd} className='btn btn-primary fab '>\n      <i className='fas fa-plus'></i>\n    </button>\n  );\n};\n\nexport default AddNewFab;\n","import { useDispatch } from 'react-redux';\nimport { startDeleteAction } from '../../redux/actions/calendarActions';\n\nconst DeleteEventFab = () => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(startDeleteAction());\n  };\n  return (\n    <button onClick={handleDelete} className='btn btn-danger fab-danger'>\n      <i className='fas fa-trash'></i>\n      <span> Borrar Evento </span>\n    </button>\n  );\n};\n\nexport default DeleteEventFab;\n","import { useEffect, useState } from 'react';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport { format, parse, startOfWeek, getDay } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport Navbar from '../ui/Navbar';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { messages } from '../../helpers/calendar-messages-ES';\nimport CalendarEvent from './CalendarEvent';\nimport CalendarModal from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiSetOpenModalAction } from '../../redux/actions/uiActions';\nimport {\n  calendarClearActiveAction,\n  calendarSetActiveAction,\n  startLoadAction,\n} from '../../redux/actions/calendarActions';\nimport AddNewFab from '../ui/AddNewFab';\nimport DeleteEventFab from '../ui/DeleteEventFab';\n\nconst locales = { es };\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales,\n});\n\nconst CalendarScreen = () => {\n  const [lastView, setLastView] = useState(\n    localStorage.getItem('lastView') || 'month'\n  );\n\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector((state) => state.calendar);\n  const { uid } = useSelector((state) => state.auth);\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: uid === event.user._id ? 'red' : 'blue',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white',\n    };\n    return { style };\n  };\n\n  useEffect(() => {\n    dispatch(startLoadAction());\n  }, [dispatch]);\n\n  const onDoubleClickEvent = (e) => {\n    dispatch(uiSetOpenModalAction());\n  };\n\n  const onSelectEvent = (e) => {\n    dispatch(calendarSetActiveAction(e));\n  };\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const onSelectSlot = (e) => {\n    activeEvent && dispatch(calendarClearActiveAction());\n  };\n\n  return (\n    <div className='calendar__container'>\n      <Navbar />\n      <Calendar\n        messages={messages}\n        culture='es'\n        localizer={localizer}\n        events={events}\n        startAccessor='start'\n        endAccessor='end'\n        eventPropGetter={eventStyleGetter}\n        components={{ event: CalendarEvent }}\n        onDoubleClickEvent={onDoubleClickEvent}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        view={lastView}\n        selectable\n        onSelectSlot={onSelectSlot}\n      />\n\n      <AddNewFab />\n      {activeEvent && <DeleteEventFab />}\n\n      <CalendarModal />\n    </div>\n  );\n};\n\nexport default CalendarScreen;\n","import { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoutes = ({ isAuthenticated, children, ...rest }) => {\n  return (\n    <Route {...rest}>\n      {isAuthenticated ? children : <Redirect to='/login' />}\n    </Route>\n  );\n};\n\nexport default PrivateRoutes;\n","import { Redirect, Route } from 'react-router-dom';\n\nconst PublicRoutes = ({ isAuthenticated, children, ...rest }) => {\n  // TODO: utlizar auth para redireccionar\n  return (\n    <Route {...rest}>{!isAuthenticated ? children : <Redirect to='/' />}</Route>\n  );\n};\n\nexport default PublicRoutes;\n","import { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom';\nimport LoginRegisterScreen from '../components/auth/LoginRegisterScreen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CalendarScreen from '../components/calendar/CalendarScreen';\nimport PrivateRoutes from './PrivateRoutes';\nimport PublicRoutes from './PublicRoutes';\nimport { useEffect } from 'react';\nimport { startChecking } from '../redux/actions/authActions';\n\nconst AppRouter = () => {\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) return <h1>Cargando...</h1>;\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoutes isAuthenticated={!!uid} path='/login'>\n            <LoginRegisterScreen />\n          </PublicRoutes>\n\n          <PrivateRoutes isAuthenticated={!!uid} exact path='/'>\n            <CalendarScreen />\n          </PrivateRoutes>\n\n          <Redirect to='/' />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { Provider } from 'react-redux';\nimport { store } from './redux/store/store';\nimport AppRouter from './routers/AppRouter';\n\nconst CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n\nexport default CalendarApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CalendarApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}